// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Metamask
async function connectWallet() {
  if (window.ethereum) {
    try {
      const accounts = await ethereum.request({ method: "eth_requestAccounts" });
      document.getElementById("wallet-status").textContent = `‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß: ${accounts[0]}`;
      return accounts[0];
    } catch (error) {
      console.error("‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
    }
  } else {
    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Metamask!");
  }
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢
async function checkNetwork() {
  const chainId = await ethereum.request({ method: "eth_chainId" });
  if (chainId !== "0x1") { // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ Ethereum Mainnet
    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á Ethereum Mainnet!");
  }
}

// ‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏±‡∏ö Smart Contract
const contractAddress = "0xYourContractAddress"; // ‡πÉ‡∏™‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á Smart Contract
const contractABI = [ /* ‡πÉ‡∏™‡πà ABI ‡∏Ç‡∏≠‡∏á Smart Contract ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà */ ];
const web3 = new Web3(window.ethereum);
const nftContract = new web3.eth.Contract(contractABI, contractAddress);

async function mintNFT() {
  try {
    const accounts = await web3.eth.getAccounts();
    await nftContract.methods.mint().send({ from: accounts[0] });
    alert("üéâ ‡∏°‡∏¥‡πâ‡∏ô NFT ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
  } catch (error) {
    console.error("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡πâ‡∏ô NFT:", error);
  }
}

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°
document.getElementById("connect-btn").addEventListener("click", connectWallet);
document.getElementById("fuse-btn").addEventListener("click", mintNFT);
